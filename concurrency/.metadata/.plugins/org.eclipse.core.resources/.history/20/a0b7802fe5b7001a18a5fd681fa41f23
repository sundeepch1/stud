package synchonization.problem;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;

class MyClass {
	//volatile private int number = 0;
	
	AtomicInteger num = new AtomicInteger(1);

	public void doIncrement() {
//		synchronized (this) {
//			for (int i = 0; i < 5; i++) {
//				System.out.println("My number = " + number++);
//			}
//		}
		
		System.out.println("Atomic = " + num.getAndIncrement());
	}
}

public class SynchronizationProblem {

	public static void main(String... strings) {
		ExecutorService executorService = Executors.newFixedThreadPool(2);

		for (int i = 0; i < 2; i++) {
			executorService.submit(new Runnable() {

				@Override
				public void run() {
					new MyClass().doIncrement();
				}
			});
		}
		executorService.shutdown();
	}
}
