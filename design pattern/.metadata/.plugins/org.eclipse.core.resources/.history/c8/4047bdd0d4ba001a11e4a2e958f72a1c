package observer.design.pattern;

import java.util.ArrayList;
import java.util.List;

class User implements Observer {
	private String location;

	@Override
	public void update(String location) {
		this.location = location;
		showLocation();
	}

	public void showLocation() {
		System.out.println("Notification at User - Current Location: " + location);
	}
}

class DeliveryWarehouseCenter implements Observer {
	private String location;

	@Override
	public void update(String location) {
		this.location = location;
		showLocation();
	}

	public void showLocation() {
		System.out.println("Notification at Warehouse - Current Location: " + location);
	}
}

public class ObserverPatternTest {

	public static void main(String[] args) {
		DeliveryData topic = new DeliveryData();

		Observer obj1 = new Seller();
		Observer obj2 = new User();
		Observer obj3 = new DeliveryWarehouseCenter();

		topic.register(obj1);
		topic.register(obj2);
		topic.register(obj3);

		topic.locationChanged();

		topic.unregister(obj3);

		System.out.println();
		topic.locationChanged();

	}
}
